---

# vim: ts=2:sw=2:et:ft=yaml
# -*- mode: yaml; indent-tabs-mode: nil; tab-width: 2 -*-
# code: language=yaml insertSpaces=true tabSize=2

# https://github.com/atc0005/ansible-playbook-lxd-testenv
# https://github.com/atc0005/ansible-role-lxd-testenv

- name: Configure base LXD host
  hosts: localhost

  # Rely on this setting to be specified in host_vars or group_vars files. If
  # we lock in the 'local' option here then that rules out setting up any
  # remote hosts as LXD hosts.
  # connection: local

  # Should be fine to gather facts for just the future LXD host
  gather_facts: yes

  tasks:

    # Stub role for now. Later work will have it install required packages
    # needed in order to configure host system for running LXD containers
    - name: Apply lxd-host role to install LXD packages, perform initial setup
      import_role:
        name: atc0005.lxd-host


- name: Setup LXD test environment
  hosts: localhost

  # Rely on this setting to be specified in host_vars or group_vars files. If
  # we lock in the 'local' option here then that rules out connecting via SSH
  # later, perhaps as a means of validating earlier playbook tasks.
  # connection: local

  # This is handled by the earlier atc0005.lxd-host role play
  gather_facts: no

  tasks:

    # Default role settings handle creation; we have to explicitly enable
    # container/settings removal tasks
    - name: Apply lxd-testenv role to create test environment
      import_role:
        name: atc0005.lxd-testenv
      vars:

        #######################################################################
        # NOTE: The most common supported role varibles with values set to
        # their default state are included below. There are more; see the
        # README file for the atc0005.lxd-testenv role for more information.
        # https://github.com/atc0005/ansible-role-lxd-testenv
        #
        # Instead of setting values here for ALL hosts, you can also set
        # values per group or per host in the test inventory files. For
        # example, if you wish to have additional CentOS specific packages
        # installed in the CentOS test containers, update the
        # inventories/testing/group_vars/centos.yml file to include the list
        # of packages. See the 'lxd_containers_packages_extra' variable set
        # within this file for an example.
        #######################################################################

        # Valid values: "create" and "remove"
        state: "create"

        # lxd_host_update_user_known_hosts_file: false
        # lxd_host_update_system_known_hosts_file: false
        # lxd_host_update_ssh_client_user_config_file: false
        # lxd_host_update_ssh_client_system_config_file: true
        # lxd_host_update_etc_hosts_file: true
        # lxd_host_ssh_public_key_for_containers: "{{ lxd_host_ssh_private_key_for_containers + '.pub' }}"
        # lxd_host_ssh_private_key_for_containers: "{{ lookup('env','HOME') + '/.ssh/id_ed25519' }}"
        # lxd_containers_update_hosts_file: false
        # lxd_containers_sudoers_include_file: "/etc/sudoers.d/ansible"
        # lxd_containers_service_group: "ansible"
        # lxd_containers_service_account: "ansible"
        # lxd_containers_proxy_server: "http://proxy.example.com:3128/"
        # lxd_containers_image_source: "ubuntu/xenial/amd64"
        # lxd_containers_image_server: "https://images.linuxcontainers.org"
        # lxd_containers_docker_storage_driver: "vfs"
        # lxd_containers_docker_storage_driver: "overlay"
        # lxd_containers_create: true
        # lxd_containers_configure: true
        # lxd_containers_bootstrap: true
        # lxd_containers_add_proxy_to_etc_environment_file: true
        #
        # lxd_containers_packages_extra:
        #   - "nano"
        #
        # lxd_containers_profiles:
        #   - "default"
        #

...
